{"version":3,"sources":["components/AddCategory.js","components/GftGriditem.js","helpers/getGifs.js","hooks/useFetchGifs.js","components/GiftGrid.js","GiftExperrtApp.js","index.js"],"names":["AddCategory","setCategory","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","categories","type","value","onChange","target","GftGriditem","img","className","src","url","alt","title","id","getGifs","a","encodeURI","fetch","resp","json","data","gifs","map","images","downsized_medium","useFetchGifs","loading","state","setState","useEffect","then","imgs","setTimeout","GiftGrid","GiftExperrtApp","category","ReactDOM","render","document","getElementById"],"mappings":"+KAmDeA,MAhDf,YAAqC,IAAfC,EAAc,EAAdA,YAElB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KA2BA,OACI,8BACI,sBAAMC,SAvBO,SAACC,GAGlBA,EAAEC,iBAWoB,KAAtBJ,EAAWK,QACXP,GAAY,SAACQ,GAAD,OAAgBN,GAAhB,mBAA+BM,OAC3CL,EAAc,KAOV,SACI,uBACIM,KAAK,OACLC,MAASR,EACTS,SA/BS,SAACN,GACtBF,EAAcE,EAAEO,OAAOF,e,KCIhBG,MATf,YAA6B,IAAPC,EAAM,EAANA,IAClB,OACI,sBAAKC,UAAU,yCAAf,UACI,qBAAKC,IAAKF,EAAIG,IAAKC,IAAKJ,EAAIK,QAC5B,4BAAIL,EAAIK,UAFiDL,EAAIM,K,uBCLnEC,EAAO,uCAAG,WAAOb,GAAP,uBAAAc,EAAA,6DACNL,EADM,iDAC0CM,UAAUf,GADpD,+DAGOgB,MAAMP,GAHb,cAGNQ,EAHM,gBAISA,EAAKC,OAJd,uBAILC,EAJK,EAILA,KAEDC,EAAOD,EAAKE,KAAI,SAACf,GACnB,MAAO,CACHM,GAAIN,EAAIM,GACRD,MAAOL,EAAIK,MACXF,IAAKH,EAAIgB,OAAOC,iBAAiBd,QAV7B,kBAcLW,GAdK,4CAAH,sDAiBEP,ICUAW,EAtBM,SAACxB,GAElB,MAA0BP,mBAAS,CAC/B0B,KAAM,GACNM,SAAS,IAFb,mBAAMC,EAAN,KAAaC,EAAb,KAiBA,OAZAC,qBAAU,WACNf,EAAQb,GACP6B,MAAK,SAACC,GACHC,YAAW,WACPJ,EAAS,CACLR,KAAMW,EACNL,SAAS,MAEf,UAER,CAACzB,IAEI0B,GC4BIM,MA5Cf,YAAgC,IAAbhC,EAAY,EAAZA,WAKf,EAA+BwB,EAAaxB,GAAhCsB,EAAZ,EAAOH,KAAaM,EAApB,EAAoBA,QAsBpB,OACI,qCACEA,GAAW,iBACb,6BAAKzB,IACL,qBAAKO,UAAU,YAAf,SAEQe,EAAOD,KAAI,SAACf,GACR,OACI,cAAC,EAAD,CAAaA,IAAKA,aCjB3B2B,MAtBf,WAEI,MAAkCxC,mBAAS,CAAC,cAA5C,mBAAOO,EAAP,KAAmBR,EAAnB,KAEA,OACI,gCACI,iDACA,cAAC,EAAD,CAAaA,YAAaA,IAC1B,uBAGA,6BAEQQ,EAAWqB,KAAI,SAACa,GACZ,OAAQ,cAAC,EAAD,CAAyBlC,WAAYkC,GAAtBA,YCX/CC,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,U","file":"static/js/main.1d5caea3.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction AddCategory({setCategory}) {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const hadleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        \r\n\r\n        e.preventDefault();\r\n        //como prop el padre le pasó la prop al hijo setCategory que se encarga de actualizar el estado del padre que es un array de categorias, (es una función) se puede enviar del padre   <AddCategory setCategory={setCategory} /categories={categories}> ose enviar el estado inicial categories \r\n\r\n        //Aqui para actualizar el padre usamos la función que actualiza ele stadod el padre que es una prop, setCategory, la otra prop categories que es una rray la desestructuramos y enviamso todos sus elementos ...categories, mas el valor del input\r\n\r\n\r\n        // setCategory([...categories, inputValue]);\r\n        // setInputValue('');\r\n\r\n        //Ahora Tambien podemos no enviar si no la funcion actualizadora, y esa funcion actualizadora ejecutaria otra función, un callback que tendria un parámetro, ese parámetro sería el estado del componente padre y se podria actualizar normalmente comos e hizo arribas\r\n\r\n        inputValue.trim() !== '' && \r\n        setCategory((categories)=>([inputValue, ...categories]))\r\n        setInputValue('');\r\n        \r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={handleSubmit}>\r\n                <input \r\n                    type=\"text\"\r\n                    value = {inputValue}\r\n                    onChange={hadleInputChange}\r\n                />\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\n//La props debbe llegar y ser una función\r\n\r\nAddCategory.propTypes = {\r\n    setCategory: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default AddCategory\r\n","import React from 'react';\r\nimport '../index.css';\r\n\r\nfunction GftGriditem({img}) {\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\" key={img.id}>\r\n            <img src={img.url} alt={img.title} />\r\n            <p>{img.title}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GftGriditem\r\n","const getGifs = async (categories) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(categories)}&limit=10&api_key=3PqVC43w9xhYdA2Gg0HvXFAz1LIftaec`;\r\n\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map((img)=>{\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images.downsized_medium.url\r\n        }\r\n    });\r\n\r\n    return gifs;\r\n}\r\n\r\nexport default getGifs;","import {useState, useEffect} from 'react';\r\nimport getGifs from '../helpers/getGifs';\r\n\r\n\r\n\r\nconst useFetchGifs = (categories) => {\r\n\r\n    const[state, setState] =  useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(()=>{\r\n        getGifs(categories)\r\n        .then((imgs)=>{\r\n            setTimeout(()=>{\r\n                setState({\r\n                    data: imgs,\r\n                    loading: false\r\n                })\r\n            },3000)\r\n        })\r\n    },[categories]);\r\n\r\n    return state;\r\n}\r\n\r\nexport default useFetchGifs;","import React, {useState, useEffect} from 'react';\r\nimport GftGriditem from './GftGriditem';\r\nimport getGif from '../helpers/getGifs';\r\n\r\nimport useFetchGifs from '../hooks/useFetchGifs';\r\n\r\n\r\n\r\nfunction GiftGrid({categories}){\r\n\r\n \r\n    //const [images, setImages] = useState([]);\r\n\r\n    const {data:images, loading} = useFetchGifs(categories);\r\n   \r\n   \r\n    \r\n   \r\n    //La función que hace el fetch está en helpers/getGifs es una funcion asycn await, esta funcion tiene un retorno, cuando se hace retornod e una funcion asycn esta retorna una promesa\r\n\r\n\r\n    //====> Aquí usamos un helper\r\n\r\n    // useEffect(()=>{\r\n    //     const gifs = getGif(categories);\r\n    //     gifs.then((imgs)=>{\r\n    //         setImages(imgs);\r\n    //     })\r\n    // },[categories])\r\n\r\n    //====> Aquí un custom hook\r\n\r\n   \r\n\r\n\r\n    return (\r\n        <>\r\n         {loading && \"Cargando......\"}\r\n        <h1>{categories}</h1>\r\n        <div className=\"card-grid\">\r\n            {\r\n                images.map((img)=>{\r\n                    return(\r\n                        <GftGriditem img={img}/>\r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GiftGrid\r\n","import React, {useState} from 'react';\r\nimport AddCategory from './components/AddCategory';\r\nimport GiftGrid from './components/GiftGrid';\r\n\r\nfunction GiftExperrtApp() {\r\n\r\n    const [categories, setCategory] = useState(['one Punch'])\r\n\r\n    return (\r\n        <div>\r\n            <h2>Gift expert app</h2>\r\n            <AddCategory setCategory={setCategory} />\r\n            <hr/>\r\n           \r\n            \r\n            <ol>\r\n                {\r\n                    categories.map((category) => {\r\n                        return  <GiftGrid key={category} categories={category} />\r\n                    })\r\n                }\r\n            </ol>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GiftExperrtApp\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport GiftExperrtApp from './GiftExperrtApp';\nimport './index.css';\n\n\nReactDOM.render(\n    <GiftExperrtApp />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}